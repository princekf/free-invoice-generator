name: Build and Deploy to Development

on:
  pull_request:
    types: [closed]
    branches: [master]
  workflow_dispatch:

jobs:
  build-and-deploy:
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Set Git User
        run: |
          git config --global user.email "prince.francis@tociva.com"
          git config --global user.name "Tociva Technologies"

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Increment version
        run: yarn version patch

      - name: Get branch name
        run: |
          BRANCH_NAME=${GITHUB_REF_NAME:-$(git rev-parse --abbrev-ref HEAD)}
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          VERSION_FULL="v${VERSION}-${BRANCH_NAME}"
          echo "VERSION_FULL=$VERSION_FULL" >> $GITHUB_ENV

      - name: Update versions.md
        run: |
          CURRENT_DATE=$(date +"%Y-%m-%d")
          {
            echo "# Version Details"
            echo "## Version: $VERSION"
            echo "## Date: $CURRENT_DATE"
            echo "BRANCH_NAME=$BRANCH_NAME"
            echo "BUILD_VERSION=$VERSION_FULL"
            echo ""
            cat versions.md
          } > versions.tmp && mv versions.tmp versions.md
      
      - name: Commit and Push Changes
        run: |
          git add package.json
          git add versions.md
          git commit -m "ci: bump version to $VERSION [skip ci]"
          git push origin HEAD:$BRANCH_NAME

      - name: Install dependencies with Yarn
        run: yarn install --frozen-lockfile

      - name: Build Angular App (production)
        run: yarn build --configuration production
            
      - name: Add deployment info to info.txt
        run: |
          mkdir -p dist/free-invoice-generator/browser
          
          # Write info.txt
          echo "branch : $BRANCH_NAME" > dist/free-invoice-generator/browser/info.txt
          echo "version : $VERSION" >> dist/free-invoice-generator/browser/info.txt
          echo "version_full : $VERSION_FULL" >> dist/free-invoice-generator/browser/info.txt
          echo "time : $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> dist/free-invoice-generator/browser/info.txt

      - name: Deploy to Cloudflare Pages with Wrangler
        run: |
          yarn dlx wrangler pages deploy dist/free-invoice-generator/browser \
            --project-name ${{ secrets.CF_PROJECT_NAME }} \
            --branch ${{ env.VERSION_FULL }} \
            --format json > cloudflare.json

        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID:        ${{ secrets.CF_ACCOUNT_ID }}

      - name: Extract Cloudflare Deployment URL
        id: extract_url
        run: |
          URL=$(jq -r '.url' cloudflare.json)
          echo "CF_PAGES_URL=$URL" >> $GITHUB_ENV


      - name: Create and Push Tag
        run: |
          TAG_NAME="${{ env.VERSION_FULL }}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Get User, Release Date and Time
        run: |
          echo "RELEASE_DATETIME=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV
          echo "RELEASE_USER=${{ github.actor }}" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: '${{ env.TAG_NAME }}'
          name: 'Development Release ${{ env.VERSION_FULL }}'
          body: |
            ## Release Details
            - **Title:** `Development Release ${{ env.VERSION_FULL }}`
            - **Environment:** `Development`
            - **Branch:** `${{ env.BRANCH_NAME }}`
            - **Version:** `${{ env.VERSION }}`
            - **Version Full Name:** `${{ env.VERSION_FULL }}`
            - **Release Date:** `${{ env.RELEASE_DATETIME }}`
            - **Released By:** `${{ env.RELEASE_USER }}`
            - **Cloudflare Pages URL:** `${{ env.CF_PAGES_URL }}`
          draft: false
          prerelease: true


